apiVersion: apps/v1
kind: Deployment
metadata:
  name: zetsu-app-deployment
  labels:
    app: zetsu
spec:
  replicas: 1 # number of replicas to run
  selector:
    matchLabels:
      app: zetsu
  template:
    metadata:
      labels:
        app: zetsu
    spec:
      initContainers:
        - name: zetsu-db-check
          image: mongo:5
          command: ['/bin/bash', '-c', 
            "until mongo 
              --host $MONGO_HOST 
              --port $MONGO_PORT 
              --eval 
              'quit(db.runCommand({ ping: 1 }).ok ? 0 : 1)' --quiet; 
            do 
              echo 'Waiting for MongoDB'; 
              sleep 2; 
            done;
            echo 'MongoDB is ready!';"
          ]

          envFrom:
            - configMapRef:
                name: zetsu-config
      containers:
        - name: zetsu
          image: zetsu/nodejs
          ports:
            - containerPort: 3010 # port exposed by the container
          envFrom:
            - configMapRef:
                name: zetsu-config
          env:
            - name: MONGO_INITDB_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: zetsu-secret
                  key: MONGO_INITDB_ROOT_PASSWORD
          livenessProbe:
            httpGet:
              path: /health/live
              port: 3010
            initialDelaySeconds: 5
            timeoutSeconds: 2
            periodSeconds: 5
          readinessProbe:
            httpGet:
              path: /health/ready
              port: 3010
            initialDelaySeconds: 5
            timeoutSeconds: 2
            periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: zetsu-service
spec:
  selector:
    app: zetsu
  ports:
    - name: http
      protocol: TCP
      port: 3010 # port exposed by the service
      targetPort: 3010 # port exposed by the container
  type: ClusterIP # type of the service
